{
  "hello": "Hello, I'm Victor",
  "home-text-1": "I'm a full stack developer specializing in geotechnologies. I have extensive experience with major frontend development tools like React, Angular, TypeScript, and Next.js. I'm also proficient in map libraries such as Mapbox, OpenLayers, and Leaflet, and have worked with a variety of backend frameworks including Spring, Play Framework, Django, Express.js, and Nest.js.",
  "home-text-2": "I graduated with a degree in Surveying and Cartographic Engineering in Universidade Federal de Viçosa, hold a Master's degree in Civil Engineering with a focus on Spatial Information, and I'm currently pursuing a Ph.D. in Civil Engineering, also focusing on Spatial Information.",
  "home-text-3": "Right now, I'm working as a requirements analyst at a cartographic engineering company in Brazil, but I'm open to freelancing opportunities both in Brazil and abroad.",
  "check-out-projects": "Checkout my latest projects",
  "project-dragonfly-title": "Dragonfly",
  "project-dragonfly-description": "Dragonfly is a geointelligence platform focused on combating arboviruses endemic to Brazil, such as dengue, Zika, and chikungunya.",
  "project-geoportal-itabirito-title": "Geoportal Itabirito",
  "project-geoportal-itabirito-description": "The Geoportal Itabirito is an innovative platform that consolidates data from the Multipurpose Territorial Cadastre of the municipality of Itabirito.",
  "showcase": "Showcase",
  "links": "Links",
  "go-back": "Go back",
  "project-dragonfly": "Dragonfly",
  "project-dragonfly-intro": "In popular culture, dragonflies are known for preying on mosquito larvae that transmit arboviruses. Inspired by this concept, Dragonfly GeoAnalytics is a platform developed to help municipalities combat arboviruses by mapping outbreak sites and disease cases through aerial images captured by drones. This allows for real-time monitoring of statistics and analysis on the progression of these diseases.",
  "project-dragonfly-dev": "Dragonfly was developed as an ecosystem: it features a React frontend, two backends—one for data provision using Express.js and another for OAuth authentication using Django REST Framework—along with additional components like a pg_tileserv server and a PostGIS database to provide tiles in MVT format.",
  "project-dragonfly-frontend": "On the frontend, I utilized the react-map-gl library for rendering maps with Mapbox and the Highcharts library for chart rendering. UI components were handled by Chakra UI, and the entire interface was designed in dark mode to give the system a modern look.",
  "project-dragonfly-backend": "For the backend, I chose the combination of Express.js and Prisma to implement a data API with strong typing and rapid development speed. For the authentication management API, I used Django REST Framework along with Django OAuth Toolkit to accelerate the deployment of a cutting-edge user authentication system.",
  "project-dragonfly-mobile": "Dragonfly GeoAnalytics also includes a mobile module, developed as a separate project.",
  "project-dragonfly-contract": "In this project, I was contracted by a Brazilian engineering company to develop all aspects related to the platform: the design, development, methodology for data collection, and cloud deployment.",
  "project-dragonfly-deployment": "Currently, the platform is deployed for various municipalities with a GitOps pipeline across the entire ecosystem, updating applications and infrastructure using the concept of Infrastructure as Code. All applications are containerized and deployed in Docker Swarm with Portainer.",
  "project-geoserver-title": "Geoserver Mobile Client",
  "project-geoserver-intro": "The Geoserver Mobile Client is an application developed in Ionic, React, TypeScript, and OpenLayers that serves as a mobile client for Geoserver. The idea arose to meet the needs of users who already use a web system to manage geographic layers but required a mobile solution to download data, view it offline, access layers, edit features, and add new information directly from the device.",
  "project-geoserver-dev": "The choice of technologies, such as Ionic and React, was motivated by their flexibility and the vast ecosystem of mapping tools offered by OpenLayers, allowing for efficient rendering of vector and raster layers, as well as support for drawing complex features.",
  "project-geoserver-frontend": "The frontend was developed using Ionic and React, with OpenLayers for managing geographic data and rendering maps. The interfaces were built responsively, enabling intuitive and efficient navigation on mobile devices.",
  "project-geoserver-backend": "Geoserver was the only backend used in the project, leveraging its REST APIs to manage workspaces, stores, layers, users, and styles, eliminating the need for additional backend development.",
  "project-geoserver-mobile": "The app was developed for mobile devices with full support for offline interaction, allowing users to download data, access geographic layers, and edit features directly in the app.",
  "project-geoserver-contract": "This project was developed within the company I work for and took 3 weeks to complete, from requirements gathering to publishing the app on Google Play.",
  "project-geoserver-deployment": "The app was published via Ionic Appflow, with a non-listed distribution on Google Play, accessible only to authorized users by the client.",
  "project-geoserver-description": "This mobile client for Geoserver allows users to access geographic layers on their mobile device, supporting offline feature downloads, field data collection, and export in GeoJSON format."
}
